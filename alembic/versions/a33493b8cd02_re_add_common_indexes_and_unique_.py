"""Re-add common indexes and unique constraints

Revision ID: a33493b8cd02
Revises: fc0138732b35
Create Date: 2025-06-16 10:28:38.311945

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a33493b8cd02'
down_revision: Union[str, None] = 'fc0138732b35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_animal_groups_animal_id', 'animal_groups', ['animal_id'], unique=False)
    op.create_index('idx_animal_groups_grupo_id', 'animal_groups', ['grupo_id'], unique=False)
    # op.create_unique_constraint('unique_animal_group_assignment', 'animal_groups', ['animal_id', 'grupo_id'])
    op.create_index('idx_animal_health_event_pivot_animal_id', 'animal_health_event_pivot', ['animal_id'], unique=False)
    op.create_index('idx_animal_health_event_pivot_health_event_id', 'animal_health_event_pivot', ['health_event_id'], unique=False)
    op.create_index('idx_animal_locations_history_animal_id', 'animal_locations_history', ['animal_id'], unique=False)
    op.create_index('idx_animal_locations_history_farm_id', 'animal_locations_history', ['farm_id'], unique=False)
    op.create_index('idx_animals_current_lot_id', 'animals', ['current_lot_id'], unique=False)
    op.create_index('idx_animals_owner_user_id', 'animals', ['owner_user_id'], unique=False)
    op.create_index('idx_animals_tag_id', 'animals', ['tag_id'], unique=False)
    op.create_index('idx_farms_owner_user_id', 'farms', ['owner_user_id'], unique=False)
    op.create_index('idx_feedings_feed_type_id', 'feedings', ['feed_type_id'], unique=False)
    op.create_index('idx_feedings_feeding_date', 'feedings', ['feeding_date'], unique=False)
    op.create_index('idx_grupos_created_by_user_id', 'grupos', ['created_by_user_id'], unique=False)
    op.create_index('idx_grupos_purpose_id', 'grupos', ['purpose_id'], unique=False)
    op.create_index('idx_health_events_event_date', 'health_events', ['event_date'], unique=False)
    op.create_unique_constraint('unique_lot_name_per_farm', 'lots', ['farm_id', 'name'])
    op.create_index('idx_master_data_category', 'master_data', ['category'], unique=False)
    op.create_index('idx_offspring_born_offspring_animal_id', 'offspring_born', ['offspring_animal_id'], unique=False)
    op.create_index('idx_offspring_born_reproductive_event_id', 'offspring_born', ['reproductive_event_id'], unique=False)
    op.create_unique_constraint('unique_offspring_assignment', 'offspring_born', ['reproductive_event_id', 'offspring_animal_id'])
    op.create_index('idx_reproductive_events_animal_id', 'reproductive_events', ['animal_id'], unique=False)
    op.create_index('idx_reproductive_events_sire_animal_id', 'reproductive_events', ['sire_animal_id'], unique=False)
    op.create_index('idx_transactions_animal_id', 'transactions', ['animal_id'], unique=False)
    op.create_index('idx_transactions_transaction_date', 'transactions', ['transaction_date'], unique=False)
    op.create_index('idx_user_farm_access_farm_id', 'user_farm_access', ['farm_id'], unique=False)
    op.create_index('idx_user_farm_access_user_id', 'user_farm_access', ['user_id'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_weighings_animal_id', 'weighings', ['animal_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_weighings_animal_id', table_name='weighings')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_user_farm_access_user_id', table_name='user_farm_access')
    op.drop_index('idx_user_farm_access_farm_id', table_name='user_farm_access')
    op.drop_index('idx_transactions_transaction_date', table_name='transactions')
    op.drop_index('idx_transactions_animal_id', table_name='transactions')
    op.drop_index('idx_reproductive_events_sire_animal_id', table_name='reproductive_events')
    op.drop_index('idx_reproductive_events_animal_id', table_name='reproductive_events')
    op.drop_constraint('unique_offspring_assignment', 'offspring_born', type_='unique')
    op.drop_index('idx_offspring_born_reproductive_event_id', table_name='offspring_born')
    op.drop_index('idx_offspring_born_offspring_animal_id', table_name='offspring_born')
    op.drop_index('idx_master_data_category', table_name='master_data')
    op.drop_constraint('unique_lot_name_per_farm', 'lots', type_='unique')
    op.drop_index('idx_health_events_event_date', table_name='health_events')
    op.drop_index('idx_grupos_purpose_id', table_name='grupos')
    op.drop_index('idx_grupos_created_by_user_id', table_name='grupos')
    op.drop_index('idx_feedings_feeding_date', table_name='feedings')
    op.drop_index('idx_feedings_feed_type_id', table_name='feedings')
    op.drop_index('idx_farms_owner_user_id', table_name='farms')
    op.drop_index('idx_animals_tag_id', table_name='animals')
    op.drop_index('idx_animals_owner_user_id', table_name='animals')
    op.drop_index('idx_animals_current_lot_id', table_name='animals')
    op.drop_index('idx_animal_locations_history_farm_id', table_name='animal_locations_history')
    op.drop_index('idx_animal_locations_history_animal_id', table_name='animal_locations_history')
    op.drop_index('idx_animal_health_event_pivot_health_event_id', table_name='animal_health_event_pivot')
    op.drop_index('idx_animal_health_event_pivot_animal_id', table_name='animal_health_event_pivot')
    op.drop_constraint('unique_animal_group_assignment', 'animal_groups', type_='unique')
    op.drop_index('idx_animal_groups_grupo_id', table_name='animal_groups')
    op.drop_index('idx_animal_groups_animal_id', table_name='animal_groups')
    # ### end Alembic commands ###
